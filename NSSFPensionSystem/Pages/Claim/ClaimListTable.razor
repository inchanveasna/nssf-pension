
<div class="mb-4">
    @*<button type="button" class="btn btn-primary bs-popover rounded" data-container="body" data-trigger="hover" data-content="On Hover" data-original-title="" title="">
            On Hover
        </button>*@
    <table class="table table-bordered table-hover dataTable dtr-inline" role="grid" id="tableClaimList">
        <thead>
            <tr role="row">
                @foreach (string header in TableHeader)
                {
                    <th class="sorting" tabindex="0" aria-controls="tableClaimList" rowspan="1" colspan="1" aria-label="@header: activate to sort column ascending">@header</th>
                }
            </tr>
        </thead>
        <tbody>
            @for (int i = 0; i < ClaimList.Where(w => w.StatusId == StatusId || StatusId == 0).Count(); i++)
            {
                ClaimModel c = ClaimList.Where(w => w.StatusId == StatusId || StatusId == 0).ToList()[i];
                <tr>
                    <td class="text-center">@(i + 1)</td>
                    <td class="text-center">@c.ClaCode</td>
                    <td class="text-center">@c.Pensioner.BenId</td>
                    <td class="text-center">@c.Pensioner.FullnameKh</td>
                </tr>
            }
           
            @*<tr>
                <td class="text-center">1</td>
                <td class="text-center">001</td>
                <td class="text-center">10001</td>
                <td class="text-center">aaa</td>
            </tr>

            <tr>
                <td class="text-center">2</td>
                <td class="text-center">002</td>
                <td class="text-center">10002</td>
                <td class="text-center">aaabbbb</td>
            </tr>*@
        </tbody>
        </table>


        @*<table class="table table-bordered table-hover dataTable dtr-inline" role="grid" id="tableClaimList">
                <thead>
                    <tr role="row">
                        @foreach (string header in TableHeader)
                        {
                            <th class="sorting" tabindex="0" aria-controls="tableClaimList" rowspan="1" colspan="1" aria-label="@header: activate to sort column ascending">@header</th>

                        }
                    </tr>
                </thead>
                <tbody>
                    @if (ClaimList.Where(w => w.StatusId == StatusId || StatusId == 0).Count() == 0)
                    {
                        <tr role="row">
                            <td colspan=@TableHeader.Count class="text-center">No data available in tableត្រូវបង្ហាញ</td>
                        </tr>
                    }
                    @for (int i = 0; i < ClaimList.Where(w => w.StatusId == StatusId || StatusId == 0).Count(); i++)
                    {
                        ClaimModel c = ClaimList.Where(w => w.StatusId == StatusId || StatusId == 0).ToList()[i];
                <tr>
                    <td class="text-center" style="max-width: 50px">@(i + 1)</td>
                    <td>
                        TEST
                        <div style="display: flex; flex-direction: column; justify-content: center; align-items:center;">
                    <span class="bold-text">@c.ClaCode</span>
                    <span class="sub">
                        @(c.ClaDate.HasValue ? c.ClaDate.Value.ToString("dd-MM-yyyy") : "")
                    </span>
                </div>

                    </td>
                    <td class="text-center">
                        TEST
                        @(c.Pensioner.BenNote + "-")<b>@(c.Pensioner.BenId)</b>@("-" + c.Pensioner.BenChar)
                    </td>
                    <td>
                        TEST
                        <div style="display: flex; flex-direction: column; justify-content: center; align-items:center;">
                    <span class="bold-text">@c.Pensioner.FullnameKh</span>
                    <span class="sub">@c.Pensioner.FullnameEn</span>
                </div>

                    </td>
                    <td class="text-center" style="max-width: 50px">@(c.Pensioner.SexId== "1" ? "ប្រុស" : "ស្រី")</td>
                    <td class="text-center">@(c.Pensioner.Dob.HasValue ? c.Pensioner.Dob.Value.ToString("dd-MM-yyyy") : "")</td>

                    <td class="text-center">@(PensionTypes.Where(w=> w.TypeId == c.PsTypeId).Select(s=> s.TypeNameKh).FirstOrDefault())</td>
                    <td class="text-center">

                        TEST
                        <a href="javascript:void(0)" @onclick="()=> OnStatusClick(ClaimList.IndexOf(c))">
                            <p class="text-center" style="padding: 4px; color: @GetColorForClaimStatus(c.StatusId); border: dashed 1px @GetColorForClaimStatus(c.StatusId);">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 30 30" fill="none" stroke="@GetColorForClaimStatus(c.StatusId)" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-info"><circle cx="12" cy="12" r="10"></circle><line x1="12" y1="16" x2="12" y2="12"></line><line x1="12" y1="8" x2="12.01" y2="8"></line></svg>
                                @(ClaimStatuses.Where(w=> w.StaId == c.StatusId).Select(s=> s.StaName).FirstOrDefault())
                            </p>
                        </a>
                    </td>
                    <td class="text-center">
                        TEST
                        <div class="btn-group" role="group" aria-label="Basic example">
                    @if (c.StatusId == 1 || c.StatusId == 4)
                    {
                        <button class="btn btn-dark btn-sm bs-tooltip" title="កែប្រែ" @onclick="()=> OnEditClick(ClaimList.IndexOf(c))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit"><path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path><path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path></svg>
                        </button>
                    }
                    else
                    {
                        <button class="btn btn-dark btn-sm bs-tooltip" title="កែប្រែ" @onclick="()=> OnEditClick(ClaimList.IndexOf(c))">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-eye"><path d="M1 12s4-8 11-8 11 8 11 8-4 8-11 8-11-8-11-8z"></path><circle cx="12" cy="12" r="3"></circle></svg>
                        </button>
                    }


                    @if (c.StatusId == 1)
                    {
                        <button class="btn btn-dark btn-sm bs-tooltip" @onclick="()=>OnApprovalClick(ClaimList.IndexOf(c), 2)" title="@(ClaimStatuses.Where(w=> w.StaId == 2).FirstOrDefault().StaDescription)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-navigation"><polygon points="3 11 22 2 13 21 11 13 3 11"></polygon></svg>
                        </button>
                    }
                    else if (c.StatusId == 2)
                    {
                        <button class="btn btn-danger btn-sm bs-tooltip" @onclick="()=>OnApprovalClick(ClaimList.IndexOf(c), 4)" title="@(ClaimStatuses.Where(w=> w.StaId == 4).FirstOrDefault().StaDescription)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-x"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
                        </button>
                        <button class="btn btn-dark btn-sm bs-tooltip" @onclick="()=>OnApprovalClick(ClaimList.IndexOf(c), 3)" title="@(ClaimStatuses.Where(w=> w.StaId == 3).FirstOrDefault().StaDescription)">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-check"><polyline points="20 6 9 17 4 12"></polyline></svg>
                        </button>
                    }
                </div>
                    </td>

                </tr>
                    }
                </tbody>
            </table>*@
</div>



@code {

    [Inject] IJSRuntime Runtime { get; set; }

    [Parameter]
    public List<PensionTypeModel> PensionTypes { get; set; }

    [Parameter]
    public List<ClaimStatusModel> ClaimStatuses { get; set; }


    [Parameter]
    public List<String> TableHeader { get; set; }

    [Parameter]
    public List<ClaimModel> ClaimList { get; set; }

    [Parameter]
    public int StatusId { get; set; }


    [Parameter]
    public EventCallback<int> OnEdit { get; set; }


    [Parameter]
    public EventCallback<(int, int)> OnApproval { get; set; }


    [Parameter]
    public EventCallback<int> OnTrack { get; set; }






    public void OnEditClick(int index)
    {
        this.OnEdit.InvokeAsync(index);
    }


    public async Task OnApprovalClick(int index, int statusID)
    {
        await this.OnApproval.InvokeAsync((index, statusID));
    }

    public async Task OnStatusClick(int index)
    {
        await this.OnTrack.InvokeAsync(index);
    }


    public string GetColorForClaimStatus(int id)
    {
        string result = "var(--info)";

        switch (id)
        {
            case 1: result = "var(--info)"; break;
            case 2: result = "var(--warning)"; break;
            case 3:
            case 5:
            case 7:
            case 9:
                result = "var(--success)"; break;
            case 4:
            case 6:
            case 8:
            case 10:
                result = "var(--danger)"; break;
        }

        return result;
    }
}
