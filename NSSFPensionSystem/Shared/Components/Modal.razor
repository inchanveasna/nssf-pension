
<div id="@Id" class="modal fade @modalClass" data-backdrop="static" data-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" style="display:@modalDisplay; overflow-y: auto;">
    <div class="modal-dialog @(CenterScreen ? "modal-dialog-centered" : "") modal-@Size">
        <div class="modal-content">
            <div class="modal-header" style="padding: 10px 16px !important; align-content:center !important">
                <h5 class="modal-title">@Title</h5>
                @*<button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="Close">x</button>*@
            </div>
            <div class="@(WithoutBody ? "modal-no-body" : "modal-body")">
                @Body
            </div>
            <div class="modal-footer" style="padding: 4px 8px !important;">
                @Footer
            </div>
        </div>
    </div>
</div>


@if (showBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}



@code 
{

    [Parameter] public string Id { get; set; } = "id";
    [Parameter] public RenderFragment Title { get; set; }
    [Parameter] public RenderFragment Body { get; set; }
    [Parameter] public RenderFragment Footer { get; set; }
    [Parameter] public string Size { get; set; } = "lg";
    [Parameter] public bool CenterScreen { get; set; } = true;
    [Parameter] public bool WithoutBody { get; set; } = false;


    private string modalDisplay = "none;";
    private string modalClass = "";
    private bool showBackdrop = false;

    public void Open()
    {
        modalDisplay = "block;";
        modalClass = "show";
        showBackdrop = true;
    }

    public async Task Show()
    {
        await Task.Factory.StartNew(() =>
        {
            modalDisplay = "block;";
            modalClass = "show";
            showBackdrop = true;
        });
        StateHasChanged();
    }




    public async Task Close()
    {
        await Task.Factory.StartNew(() =>
        {
            modalDisplay = "none";
            modalClass = "";
            showBackdrop = false;
        });
        StateHasChanged();
    }
}
