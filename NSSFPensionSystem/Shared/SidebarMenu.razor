
@inject IJSRuntime runtime
<!--  BEGIN SIDEBAR  -->
<div class="sidebar-wrapper sidebar-theme">

    <nav id="sidebar">
        <div class="shadow-bottom"></div>
        <ul class="list-unstyled menu-categories" id="accordionExample">

            @foreach (var menu in menus)
            {

                @if (menu.subMenu.Count == 0)
                {
                    <li class="nav-item">
                        <a href="@menu.menu_link" class="nav-link">
                            <i class="nav-icon @menu.menu_icon"></i>
                            <p>
                                @menu.menu_name
                            </p>
                        </a>
                    </li>
                }
                else
                {
                    <li class="nav-item">
                        <a href="#" class="nav-link">
                            <i class="nav-icon @menu.menu_icon"></i>
                            <p>
                                @menu.menu_name
                                <i class="right fas fa-angle-left"></i>
                            </p>
                        </a>
                        <ul class="nav nav-treeview" style="display: none;">
                            @foreach (var subMenu in menu.subMenu)
                            {
                                <li class="nav-item">
                                    <a href="@subMenu.menu_link" class="nav-link">
                                        <i class="@subMenu.menu_icon nav-icon"></i>
                                        <p>@subMenu.menu_name</p>
                                    </a>
                                </li>
                            }
                        </ul>
                    </li>
                }
            }


        </ul>
        <!-- <div class="shadow-bottom"></div> -->

    </nav>

</div>
<!--  END SIDEBAR  -->



@code
{ 
    [Parameter]
    public List<MenuModel> menus { get; set; }


    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await runtime.InvokeAsync<object>("AppInit");
    }
}