@inherits LayoutComponentBase
@using Microsoft.AspNetCore.Authorization




        <!--  BEGIN NAVBAR  -->
        <div class="header-container fixed-top">
            <header class="header navbar navbar-expand-sm">

                <ul class="navbar-item theme-brand flex-row  text-center">
                    <li class="nav-item theme-logo">
                        <a href="index.html">
                            <img src="template/assets/img/logo.svg" class="navbar-logo" alt="logo">
                        </a>
                    </li>
                    <li class="nav-item theme-text">
                        <a href="" class="nav-link"> CORK </a>
                    </li>
                </ul>


                <div style="display:flex; flex-direction: row; justify-content: center; align-items: flex-end; color: white;" class="ml-md-auto">
                    @*<p>Hello, @context.User.Identity.Name!</p>*@
                    <ul class="navbar-item flex-row ml-md-auto">
                        <li class="nav-item dropdown notification-dropdown">
                            <a href="javascript:void(0);" class="nav-link dropdown-toggle" id="notificationDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-bell"><path d="M18 8A6 6 0 0 0 6 8c0 7-3 9-3 9h18s-3-2-3-9"></path><path d="M13.73 21a2 2 0 0 1-3.46 0"></path></svg><span class="badge badge-success"></span>
                            </a>
                            <div class="dropdown-menu position-absolute" aria-labelledby="notificationDropdown">
                                <div class="notification-scroll">

                                    <div class="dropdown-item">
                                        <div class="media">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-heart"><path d="M20.84 4.61a5.5 5.5 0 0 0-7.78 0L12 5.67l-1.06-1.06a5.5 5.5 0 0 0-7.78 7.78l1.06 1.06L12 21.23l7.78-7.78 1.06-1.06a5.5 5.5 0 0 0 0-7.78z"></path></svg>
                                            <div class="media-body">
                                                <div class="notification-para"><span class="user-name">Shaun Park</span> likes your photo.</div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="dropdown-item">
                                        <div class="media">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-share-2"><circle cx="18" cy="5" r="3"></circle><circle cx="6" cy="12" r="3"></circle><circle cx="18" cy="19" r="3"></circle><line x1="8.59" y1="13.51" x2="15.42" y2="17.49"></line><line x1="15.41" y1="6.51" x2="8.59" y2="10.49"></line></svg>
                                            <div class="media-body">
                                                <div class="notification-para"><span class="user-name">Kelly Young</span> shared your post</div>
                                            </div>
                                        </div>
                                    </div>

                                    <div class="dropdown-item">
                                        <div class="media">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-tag"><path d="M20.59 13.41l-7.17 7.17a2 2 0 0 1-2.83 0L2 12V2h10l8.59 8.59a2 2 0 0 1 0 2.82z"></path><line x1="7" y1="7" x2="7" y2="7"></line></svg>
                                            <div class="media-body">
                                                <div class="notification-para"><span class="user-name">Kelly Young</span> mentioned you in comment.</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </li>

                        <li class="nav-item dropdown user-profile-dropdown">
                            <a href="javascript:void(0);" class="nav-link dropdown-toggle user" id="userProfileDropdown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                                <svg viewBox="0 0 24 24" width="24" height="24" stroke="currentColor" stroke-width="2" fill="none" stroke-linecap="round" stroke-linejoin="round" class="css-i6dzq1"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg>
                            </a>
                            <div class="dropdown-menu position-absolute" aria-labelledby="userProfileDropdown">
                                <div class="">


                                    @*<span>Hello, @context.User.Identity.Name!</span>*@
                                    @*<button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>*@

                                    <div class="dropdown-item">
                                        <a class="" href="" @onclick="BeginSignOut">
                                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-log-out">
                                                <path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path>
                                                <polyline points="16 17 21 12 16 7"></polyline>
                                                <line x1="21" y1="12" x2="9" y2="12"></line>
                                            </svg> ចាកចេញ
                                        </a>
                                    </div>




                                    @*<div class="dropdown-item">
                                            <a class="" href="user_profile.html"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-user"><path d="M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2"></path><circle cx="12" cy="7" r="4"></circle></svg> My Profile</a>
                                        </div>
                                        <div class="dropdown-item">
                                            <a class="" href="apps_mailbox.html"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-inbox"><polyline points="22 12 16 12 14 15 10 15 8 12 2 12"></polyline><path d="M5.45 5.11L2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z"></path></svg> Inbox</a>
                                        </div>
                                        <div class="dropdown-item">
                                            <a class="" href="auth_lockscreen.html"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-lock"><rect x="3" y="11" width="18" height="11" rx="2" ry="2"></rect><path d="M7 11V7a5 5 0 0 1 10 0v4"></path></svg> Lock Screen</a>
                                        </div>
                                        <div class="dropdown-item">
                                            <a class="" href="auth_login.html"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-log-out"><path d="M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4"></path><polyline points="16 17 21 12 16 7"></polyline><line x1="21" y1="12" x2="9" y2="12"></line></svg> Sign Out</a>
                                        </div>*@
                                </div>
                            </div>
                        </li>

                    </ul>
                </div>



            </header>

        </div>
        <!--  END NAVBAR  -->

        <NavMenu breadcrumbs="@breadcrumbLinks" />




        <div class="main-container" id="container">
            <div class="overlay"></div>
            <div class="search-overlay"></div>
            <SidebarMenu menus="@menus" />
            <div id="content" class="main-content">
                @Body
            </div>
        </div>






@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Security.Claims
@inject AuthenticationStateProvider AuthenticationStateProvider


@inject IJSRuntime runtime
@inject UserService userService
@inject NavigationManager NavigationManager
@inject SignOutSessionStateManager SignOutManager
@inject ILocalStorageService localStorage
@code{

    private List<BreadcrumbModel> breadcrumbLinks = new List<BreadcrumbModel>();
    private List<MenuModel> menus = new List<MenuModel>();
    //private string currentUrl;



    protected override async Task OnInitializedAsync()
    {
        await runtime.InvokeAsync<object>("AppInit");
        menus = await userService.GetMenus(2044);



    }

    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await runtime.InvokeAsync<object>("AppInit");

        }

        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;



        if (user.Identity.IsAuthenticated)
        {
            UserModel userLogin = new UserModel()
            {
                Name = user.Claims.Where(w => w.Type == "name").FirstOrDefault()?.Value,
                EmpId = Convert.ToInt32(user.Claims.Where(w => w.Type == "emp_id").FirstOrDefault()?.Value),
                Username = user.Claims.Where(w => w.Type == "preferred_username").FirstOrDefault()?.Value,
                Picture = user.Claims.Where(w => w.Type == "picture").FirstOrDefault()?.Value,
                AccessToken = user.Claims.Where(w => w.Type == "access_token").FirstOrDefault()?.Value
            };

            await localStorage.SetItemAsync<UserModel>("user", userLogin);
        }
    }


    


    protected override void OnParametersSet()
    {

        //currentUrl = NavigationManager.Uri;
        //var myUrl = currentUrl.Replace(NavigationManager.BaseUri, "");
        //breadcrumbLinks.Clear();
        //breadcrumbLinks.Add(new BreadcrumbModel
        //{
        //    Address = NavigationManager.BaseUri,
        //    IsActive = NavigationManager.Uri == NavigationManager.BaseUri,
        //    OrderIndex = 1,
        //    Title = "ទំព័រដើម"
        //});
        //var path = myUrl.Split('/');
        //var count = 1;

        //foreach (var link in path)
        //{
        //    if (link == "") continue;
        //    count++;
        //    var lastLink = breadcrumbLinks.Last();
        //    breadcrumbLinks.Add(new BreadcrumbModel
        //    {
        //        Address = $"{lastLink.Address}{link}",
        //        IsActive = link == path.Last(),
        //        OrderIndex = count,
        //        Title = menus.FirstOrDefault().subMenu.Where(w => w.menu_link == link).Select(s => s.menu_name).FirstOrDefault()
        //    });
        //}

        base.OnParametersSet();
    }


    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        NavigationManager.NavigateTo("authentication/logout");
    }

}
